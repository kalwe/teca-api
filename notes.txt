
### DONE ###
1. Dashboard Inicial

    Visão Geral:
        Resumo de colaboradores ativos.
        Resumo de vagas abertas e currículos cadastrados.
        Alertas e notificações, como aniversários ou vencimentos de contratos.
    Gráficos:
        Distribuição de horas extras por setor ou colaborador.
        Utilização do banco de horas.




2. Gerenciamento de Currículos

    Interface de Armazenamento:
        Upload de arquivos em PDF, Word e outros formatos comuns.
        Campos para preenchimento manual das informações principais (nome, e-mail, área de atuação, experiências anteriores).
    Busca e Filtros:
        Filtro por área, cargo, formação acadêmica ou palavras-chave.
        Opção de marcar currículos como “pré-selecionados” ou “não elegíveis”.
    Integração:
        Conexão com plataformas como LinkedIn e APIs de recrutamento.



### DONE ###
3. Gestão de Ponto e Banco de Horas

    Integração de API:
        Sincronização com sistemas de ponto eletrônico para importar dados de entrada/saída.
        Cálculo automático de horas trabalhadas, horas extras e banco de horas.
    Relatórios e Visualização:
        Relatório de ponto por colaborador ou por período.
        Histórico de ajustes ou correções de ponto.
    Ações:
        Ajuste manual de horas por gestores (com justificativas).
        Exportação de relatórios para folha de pagamento.




## DONE ##
4. Cadastro de Colaboradores

    Campos de Informação Geral:
        Dados pessoais: Nome, CPF, RG, data de nascimento.
        Dados profissionais: Cargo, setor, data de admissão, salário.
        Contatos: Telefone, e-mail, endereço.
        Documentação: Upload de documentos como contratos, certificados e exames admissionais.
    Gestão de Status:
        Status do colaborador: Ativo, em licença, desligado.
        Controle de promoções e transferências internas.
    Histórico:
        Registro de mudanças no perfil do colaborador (alteração de cargo, ajustes salariais).




### DONE ###
5. Configurações Gerais

    Gestão de Acessos:
        Controle de permissões para administradores, gestores e colaboradores.
    Parâmetros de Jornada:
        Configuração de horários padrão, tolerância de atrasos e políticas de banco de horas.
    Integrações:
        Configuração de APIs para sistemas de folha de pagamento e recrutamento.




6. Relatórios Personalizados

    Relatórios detalhados de:
        Ponto e jornada.
        Horas extras por período ou por setor.
        Colaboradores recém-cadastrados.
        Currículos analisados por vaga.






identifique e extrai as entidades
aplique os mesmos padroes para gerar as class, se nescessario altere as
 class anterios ja geradas


crie uma class model base para conter dados redundantes e aplique as melhorias


adicione na class model base se houver dados redundantes
e aplique as melhorias e alteracoes necessarias
   v
    agora refatore seguindo patterns avancados, SOLID, clean code



1 - abstraia e implemente melhorias agindo como se fosse
um engenheiro de software do google, microsoft ou tesla

2 - evite o uso de numeros magicos, evite if/else
ultilize pattern avancados

3 - melhore o nome ´de variaveis e funcoes para seram mais descritivos
crie comentarios em ingles para documentar o codigo
aplique code style de acordo com as convencoes de python


4 - acordo com os patterns propostos em https://refactoring.guru/
realize mu´dancas ou alteracoes se necessario


continuando a estruturacao das pastas e arquitetura no caso
de adicionar camada de auth qual seria o padrao sujerido?
e em qual parte ela estaria?
